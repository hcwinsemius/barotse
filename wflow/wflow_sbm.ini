##################### INPUT INFO #####################

[inputmapstacks]
# Define the forcing needed for the model here
# The filename is either the name of the pcraster mapstack 
# or the name of the variable in the netcdf input file
Precipitation		= /inmaps/P
Temperature			= /inmaps/TEMP
EvapoTranspiration	= /inmaps/PET

[modelparameters]
# Format:
# name=stack,type,default
# - name - Name of the parameter (internal variable)
# - stack - Name of the mapstack (representation on disk or in mem) relative to case
# - type - Type of parameter (default = static)
# - default - Default value if map/tbl is not present
# Possible types are::
# - staticmap: Read at startup from map 
# - statictbl: Read at startup from tbl
# - timeseries: read map for each timestep
# - monthlyclim: read a map corresponding to the current month (12 maps in total)
# - dailyclim: read a map corresponding to the current day of the year
# - hourlyclim: read a map corresponding to the current hour of the day (24 in total) (not implemented yet)
# Example:
# RootingDepth=monthlyclim/ROOT,monthyclim,100,1

# The parameters defined below are needed to derive canopy parameters from LAI and land-cover
Sl=staticmaps/Sl.map,staticmap,0.1,1
Kext=staticmaps/Kext.map,staticmap,0.6,1
Swood=staticmaps/Swood.map,staticmap,0.5,1
LAI=staticmaps/clim/LAI,monthlyclim,1.0,1

# Lakes
LakeLocs=staticmaps/wflow_lakelocs.map,staticmap,0.0,0
LakeAreasMap=staticmaps/wflow_lakeareas.map,staticmap,0.0,0
LinkedLakeLocs=intbl/LinkedLakeLocs.tbl,tbl,0,0,staticmaps/wflow_lakelocs.map
LakeStorFunc=intbl/LakeStorFunc.tbl,tbl,1,0,staticmaps/wflow_lakelocs.map
LakeOutflowFunc=intbl/LakeOutflowFunc.tbl,tbl,3,0,staticmaps/wflow_lakelocs.map
LakeArea=intbl/LakeArea.tbl,tbl,1,0,staticmaps/wflow_lakelocs.map
LakeAvgLevel=intbl/LakeAvgLevel.tbl,tbl,1,0,staticmaps/wflow_lakelocs.map
LakeAvgOut=intbl/LakeAvgOut.tbl,tbl,1,0,staticmaps/wflow_lakelocs.map
LakeThreshold=intbl/LakeThreshold.tbl,tbl,0,0,staticmaps/wflow_lakelocs.map
Lake_b=intbl/Lake_b.tbl,tbl,50,0,staticmaps/wflow_lakelocs.map
Lake_e=intbl/Lake_e.tbl,tbl,2.0,0,staticmaps/wflow_lakelocs.map

[run]
# Either a runinfo file or a start- and endtime are required
#runinfo	= runinfo.xml
starttime	= 2010-01-01 00:00:00
endtime		= 2012-09-30 00:00:00
# Required, base timestep of the model
timestepsecs 	= 86400
# Start model with cold state (1) or warm state (0) 
reinit		= 1
#skipfirst	= 1
runlengthdetermination	= intervals
#runlengthdetermination	= steps

[model]
# Model parameters and settings, to be updated from the catchment data
modeltype	= wflow_sbm
AnnualDischarge	= 865
# Alpha for river-width estimation (5 for mountain stream, 60 for the river Rhine)
Alpha		= 60
kinwaveIters = 1
ModelSnow	= 0
soilInfRedu = 0
MassWasting = 1
nrivermethod = 2
# UStoreLayerThickness = 1000
estimatelakethresh=0
transfermethod=1

[framework]
# Outputformat for the *dynamic* mapstacks (not the states and summary maps)
# 1: pcraster
# 2: numpy
# 3: matlab

# NetCDF output requires also outputformat = 1 (default) and additionally the name of the file
outputformat	= 1
debug		= 0
netcdfinput		= inmaps/forcing-2000_2018.nc
netcdfoutput		= outmaps.nc
#netcdfstatesinput	= instates.nc
#netcdfstatesoutput	= states.nc
#netcdfstaticinput	= staticmaps.nc
#netcdfstaticoutput	= outsum.nc
netcdf_format			= NETCDF4
#netcdf_format			= NETCDF3_CLASSIC
EPSG				= EPSG:4326
netcdf_zlib			= True
netcdfwritebuffer		= 100
netcdf_least_significant_digit	= 2

[layout]
# If set to zero the cell-size is given in lat/lon (the default)
sizeinmetres = 0


##################### OUTPUT INFO #####################

##### Output grids #####

[outputmaps]
self.Precipitation=P
#self.PotenEvap=PET
#self.Temperature=TEMP
self.ActEvap=AET
#self.Transpiration=transp
self.RiverRunoff=run
self.qo_toriver=qo_riv
self.ssf_toriver=ssf_riv
self.ExfiltFromUstore=ex_us
self.ExfiltFromSat=ex_ss
self.UStoreDepth=ustore
self.SatWaterDepth=SWD
self.SoilWaterCapacity=SWC
#self.Inwater=Inwater
self.Transfer=trans
self.CapFlux=capflux
#self.InfiltExcessPath=in_ex_p
self.InfiltExcessSoil=in_ex_s
#self.Inflow=iflow
#self.SubCellFrac=scf
self.Inwater=inw
#self.DistToUpdPt=dist
#self.Snow=sno
self.zi=zi
#self.TopoLdd=ldd
#self.RunoffRiverCells=runriv
#self.RunoffLandCells=runland
#self.watbal=wat
#self.SoilWatbal=watsoil
#self.SurfaceWatbal=watsurf
#self.TSoil=soiltemp

[summary_sum]
self.Precipitation=precip_sum.map

[summary_max]
self.Precipitation=precip_max.map
self.Temperature=temp_max.map

[summary_min]
self.Temperature=temp_min.map

[summary_avg]
self.Precipitation=precip_avg.map


##### Output timeseries #####

[outputcsv_0]
# Save and sample these at the gauge locations
samplemap=staticmaps/wflow_gauges.map
self.RiverRunoff=run.csv
self.WaterLevelR=lev.csv

[outputcsv_1]
# Save and average these per subcatchment
samplemap=staticmaps/wflow_subcatch.map
self.Precipitation=prec_subcatch.csv
self.Transfer=tra_subcatch.csv

[outputcsv_2]
# Save and average these per land use type
samplemap=staticmaps/wflow_landuse.map
self.PotenEvap=pet_lu.csv
self.ActEvap=aet_lu.csv

[outputtss_0]
# Save and sample these at the gauge locations
samplemap=staticmaps/wflow_gauges.map
self.RiverRunoff=run.tss
self.WaterLevelR=lev.tss

[API]
RiverRunoff=2,1
RootingDepth=3,4
SoilThickness=3,4
ActRootingDepth=3,4
KsatHorFrac=3,4
KsatVer=3,4
RiverFrac=3,4
ToCubic=3,4
xl=3,4
yl=3,4
DCL=3,4
